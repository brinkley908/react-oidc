{"version":3,"sources":["../../src/service/authService.js","../../src/utils/config.js","../../src/index.js","components/callBack.js","components/logout.js","components/logoutCallback.js","components/register.js","components/silentRenew.js","components/publicPage.js","components/privatePage.js","routes/privateRoute.js","config/oidcConfig.js","App.js","index.js"],"names":["AuthService","storage","window","redirectUri","process","JSON","oidcStorage","base64","token","base64Url","console","id_token_hint","identityConfig","authority","client_id","redirect_uri","login","automaticSilentRenew","loadUserInfo","silent_redirect_uri","post_logout_redirect_uri","audience","response_type","response_mode","grantType","scope","webAuthResponseType","publicUrl","configureIdentityConfig","metaData","issuer","jwks_uri","authorization_endpoint","token_endpoint","userinfo_endpoint","end_session_endpoint","check_session_iframe","revocation_endpoint","introspection_endpoint","configureMetaData","this","store","localStore","userStore","metadata","Log","e","AuthContext","signinRedirectCallback","logout","signoutRedirectCallback","isAuthenticated","signinRedirect","signinSilentCallback","createSigninRequest","getAccessToken","getUserManager","AuthConsumer","AuthProvider","props","render","value","authService","AuthRoute","Component","component","loadingComponent","rest","loading","accessToken","Callback","Logout","LogoutCallback","Register","SilentRenew","PublicPage","PrivatePage","id","IDENTITY_CONFIG","METADATA_OIDC","App","logger","basename","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f0a2256d.chunk.js","sourcesContent":["import { UserManager, WebStorageStateStore, Log } from 'oidc-client';\r\nimport {configureIdentityConfig, configureMetaData}  from '../utils/config';\r\n\r\nexport default class AuthService {\r\n    UserManager;\r\n    localStore;\r\n    identityConfig;\r\n\r\n    constructor(identityConfig, metaData, localStore, logger){\r\n  \r\n        identityConfig = configureIdentityConfig(identityConfig);\r\n\r\n        metaData = configureMetaData(metaData);\r\n\r\n        this.localStore = localStore;\r\n\r\n        this.identityConfig = identityConfig;\r\n\r\n        const store = this.localStore? localStorage : sessionStorage;\r\n\r\n        this.UserManager = new UserManager({\r\n            ...identityConfig,\r\n\r\n            userStore: new WebStorageStateStore({\r\n                store: store\r\n            }),\r\n\r\n            metadata: {...metaData}\r\n\r\n        });\r\n\r\n        if(logger){\r\n            Log.logger = logger;\r\n            Log.level = Log.DEBUG;\r\n        }\r\n\r\n        this.UserManager.events.addUserLoaded((user) => {\r\n            console.log(\"addUserLoaded event\")\r\n            if (window.location.href.indexOf(\"signin-oidc\") !== -1) {\r\n                this.navigateToScreen();\r\n            }\r\n        });\r\n        this.UserManager.events.addSilentRenewError((e) => {\r\n            console.log(\"silent renew error\", e.message);\r\n        });\r\n\r\n        this.UserManager.events.addAccessTokenExpired(() => {\r\n            console.log(\"token expired\");\r\n            this.signinSilent();\r\n        });\r\n\r\n    } \r\n\r\n    getUserManager = () => {\r\n        return this.UserManager;\r\n    }\r\n\r\n    signinRedirectCallback = () => {\r\n        this.UserManager.signinRedirectCallback().then(() => {\r\n            \"\";\r\n        });\r\n    };\r\n\r\n    getUser = async () => {\r\n        const user = await this.UserManager.getUser();\r\n        if (!user) {\r\n            return await this.UserManager.signinRedirectCallback();\r\n        }\r\n        return user;\r\n    };\r\n\r\n    signinRedirect = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        storage.setItem(\"redirectUri\", window.location.pathname);\r\n        this.UserManager.signinRedirect({});\r\n    };\r\n\r\n    navigateToScreen = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        var redirectUri = storage.getItem(\"redirectUri\");\r\n        window.location.replace(redirectUri);\r\n    };\r\n\r\n\r\n  \r\n\r\n    getClientId = () => {\r\n        if(this.identityConfig === undefined  || this.identityConfig.client_id === undefined){\r\n            return process.env.REACT_APP_OIDC_CLIENT_ID;\r\n        }\r\n        return this.identityConfig.client_id;\r\n    }\r\n\r\n    getStorage = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        const result = JSON.parse(storage.getItem(`oidc.user:${this.identityConfig.authority}:${this.identityConfig.client_id}`));\r\n        return result;\r\n    }\r\n\r\n    isAuthenticated = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        const oidcStorage = JSON.parse(storage.getItem(`oidc.user:${this.identityConfig.authority}:${this.identityConfig.client_id}`))\r\n        return (!!oidcStorage && !!oidcStorage.access_token)\r\n    };\r\n\r\n    getAccessToken = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        const oidcStorage = JSON.parse(storage.getItem(`oidc.user:${this.identityConfig.authority}:${this.identityConfig.client_id}`))\r\n        if (!!oidcStorage && !!oidcStorage.access_token) {\r\n            return oidcStorage.access_token;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    parseJwt = (token) => {\r\n        const base64Url = token.split(\".\")[1];\r\n        const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n        return JSON.parse(window.atob(base64));\r\n    };\r\n\r\n    signinSilent = () => {\r\n        this.UserManager.signinSilent()\r\n            .then((user) => {\r\n                console.log(\"signed in\", user);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    signinSilentCallback = () => {\r\n        this.UserManager.signinSilentCallback();\r\n    };\r\n\r\n    createSigninRequest = () => {\r\n        return this.UserManager.createSigninRequest();\r\n    };\r\n\r\n    logout = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        this.UserManager.signoutRedirect({\r\n            id_token_hint: storage.getItem(\"id_token\")\r\n        });\r\n        this.UserManager.clearStaleState();\r\n    };\r\n\r\n    signoutRedirectCallback = () => {\r\n        const storage = this.localStore ? localStorage : sessionStorage;\r\n        this.UserManager.signoutRedirectCallback().then(() => {\r\n            storage.clear();\r\n            window.location.replace(this.identityConfig.publicUrl);\r\n        });\r\n        this.UserManager.clearStaleState();\r\n    };\r\n}","export function configureIdentityConfig(identityConfig){\r\n\r\n    if(!!identityConfig) return identityConfig;\r\n\r\n    return {\r\n        authority: process.env.REACT_APP_OIDC_AUTHORITY, //(string): The URL of the OIDC provider.\r\n        client_id: process.env.REACT_APP_OIDC_CLIENT_ID, //(string): Your client application's identifier as registered with the OIDC provider.\r\n        redirect_uri: process.env.REACT_APP_OIDC_REDIRECT_URL, //The URI of your client application to receive a response from the OIDC provider.\r\n        login: process.env.REACT_APP_OIDC_LOGIN,\r\n        automaticSilentRenew: process.env.REACT_APP_OIDC_AUTOMATIC_SILENT_RENEW, //(boolean, default: false): Flag to indicate if there should be an automatic attempt to renew the access token prior to its expiration.\r\n        loadUserInfo: process.env.REACT_APP_OIDC_LOAD_USER_INFO, //(boolean, default: true): Flag to control if additional identity data is loaded from the user info endpoint in order to populate the user's profile.\r\n        silent_redirect_uri: process.env.REACT_APP_OIDC_SILENT_REDIRECT_URL, //(string): The URL for the page containing the code handling the silent renew.\r\n        post_logout_redirect_uri: process.env.REACT_APP_OIDC_LOGOFF_REDIRECT_URL, // (string): The OIDC post-logout redirect URI.\r\n        audience: process.env.REACT_APP_OIDC_AUDIENCE, //is there a way to specific the audience when making the jwt\r\n        response_type: process.env.REACT_APP_OIDC_RESPONSE_TYPE, //(string, default: 'id_token'): The type of response desired from the OIDC provider.\r\n        response_mode: process.env.REACT_APP_OIDC_RESPONSE_MODE,\r\n        grantType: process.env.REACT_APP_OIDC_GRANT_TYPE,\r\n        scope: process.env.REACT_APP_OIDC_SCOPE, //(string, default: 'openid'): The scope being requested from the OIDC provider.\r\n        webAuthResponseType: process.env.REACT_APP_OIDC_WEB_AUTH_RESPONSE_TYPE,\r\n        publicUrl: process.env.REACT_APP_OIDC_PUBLIC_URL\r\n    }\r\n    \r\n}\r\n\r\nexport function configureMetaData(metaData){\r\n    \r\n    if(!!metaData) return metaData;\r\n\r\n    return {\r\n        issuer: process.env.REACT_APP_OIDC_ISSUER,\r\n        jwks_uri: process.env.REACT_APP_OIDC_JWKS_URI,\r\n        authorization_endpoint: process.env.REACT_APP_OIDC_AUTHORIZATION_ENDPOINT,\r\n        token_endpoint: process.env.REACT_APP_OIDC_TOKEN_ENDPOINT,\r\n        userinfo_endpoint: process.env.REACT_APP_OIDC_USER_INFO_ENDPOINT,\r\n        end_session_endpoint: process.env.REACT_APP_OIDC_END_SESSION_ENDPOINT,\r\n        check_session_iframe: process.env.REACT_APP_OIDC_CHECK_SESSION_IFRAME,\r\n        revocation_endpoint: process.env.REACT_APP_OIDC_REVOCATION_ENDPOINT,\r\n        introspection_endpoint: process.env.REACT_APP_OIDC_INTROPSPECTION_ENDPOINT\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport AuthService from './service/authService'\r\n\r\nimport styles from './styles.module.css'\r\n\r\nconst AuthContext = React.createContext({\r\n  signinRedirectCallback: () => ({}),\r\n  logout: () => ({}),\r\n  signoutRedirectCallback: () => ({}),\r\n  isAuthenticated: () => ({}),\r\n  signinRedirect: () => ({}),\r\n  signinSilentCallback: () => ({}),\r\n  createSigninRequest: () => ({}),\r\n  getAccessToken: () => ({}),\r\n  getUserManager: () => ({})\r\n})\r\n\r\nexport const AuthConsumer = AuthContext.Consumer\r\n\r\nexport class AuthProvider extends Component {\r\n  authService\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.authService = new AuthService(\r\n      props.identityConfig,\r\n      props.metaData,\r\n      props.localStore === undefined ? true : props.localStore,\r\n      props.logger\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AuthContext.Provider value={this.authService}>\r\n        {this.props.children}\r\n      </AuthContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const AuthRoute = ({ component, loadingComponent, ...rest }) => {\r\n\r\n  const loading = !!loadingComponent \r\n                  ? loadingComponent \r\n                  : <span>loading...</span>\r\n\r\n  const renderRoute = (Component) => (props) => (\r\n      <AuthConsumer>\r\n          {({ isAuthenticated, signinRedirect, getAccessToken }) => {\r\n              const accessToken = getAccessToken();\r\n\r\n              if (!!Component && isAuthenticated()) {\r\n                  return <Component {...props} accessToken={accessToken} />;\r\n              } else {\r\n                  signinRedirect();\r\n                  return  {loading};\r\n              }\r\n          }}\r\n      </AuthConsumer>\r\n  );\r\n\r\n  return <Route {...rest} render={renderRoute(component)} />;\r\n};\r\n","import React from \"react\";\r\nimport { AuthConsumer } from \"@spekta/react-oidc\";\r\n\r\nexport const Callback = () => (\r\n    <AuthConsumer>\r\n        {({ signinRedirectCallback }) => {\r\n            signinRedirectCallback();\r\n            return <span>loading</span>;\r\n        }}\r\n    </AuthConsumer>\r\n);","import React from \"react\";\r\nimport { AuthConsumer } from \"@spekta/react-oidc\";\r\n\r\nexport const Logout = () => (\r\n    <AuthConsumer>\r\n        {({ logout }) => {\r\n            logout();\r\n            return <span>loading</span>;\r\n        }}\r\n    </AuthConsumer>\r\n);","\r\nimport React from \"react\";\r\nimport { AuthConsumer } from \"@spekta/react-oidc\";\r\n\r\nexport const LogoutCallback = () => (\r\n    <AuthConsumer>\r\n        {({ signoutRedirectCallback }) => {\r\n            signoutRedirectCallback();\r\n            return <span>loading</span>;\r\n        }}\r\n    </AuthConsumer>\r\n);\r\n","import React from 'react';\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div>\r\n            register\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { AuthConsumer } from \"@spekta/react-oidc\";\r\nexport const SilentRenew = () => (\r\n    <AuthConsumer>\r\n        {({ signinSilentCallback }) => {\r\n            signinSilentCallback();\r\n            return <span>loading</span>;\r\n        }}\r\n    </AuthConsumer>\r\n);","import React from 'react';\r\n\r\nexport const PublicPage = () => {\r\n    return (\r\n        <div>\r\n            Public page\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\n\r\nexport const PrivatePage = (props) => {\r\n\r\n    const token = props.accessToken;\r\n\r\n    return (\r\n        <div id=\"profile-partial-service\">\r\n            <div>Private page</div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthConsumer } from \"@spekta/react-oidc\";\r\n\r\nexport const PrivateRoute = ({ component, ...rest }) => {\r\n    const renderFn = (Component) => (props) => (\r\n        <AuthConsumer>\r\n            {({ isAuthenticated, signinRedirect }) => {\r\n                \r\n                if (!!Component && isAuthenticated()) {\r\n                    return <Component {...props} />;\r\n                } else {\r\n                    signinRedirect();\r\n                    return <span>Loading...</span>;\r\n                }\r\n            }}\r\n        </AuthConsumer>\r\n    );\r\n\r\n    return <Route {...rest} render={renderFn(component)} />;\r\n};\r\n","export const IDENTITY_CONFIG = {\r\n    authority: process.env.REACT_APP_OIDC_AUTHORITY, //(string): The URL of the OIDC provider.\r\n    client_id: process.env.REACT_APP_OIDC_CLIENT_ID, //(string): Your client application's identifier as registered with the OIDC provider.\r\n    redirect_uri: process.env.REACT_APP_OIDC_REDIRECT_URL, //The URI of your client application to receive a response from the OIDC provider.\r\n    login: process.env.REACT_APP_OIDC_LOGIN,\r\n    automaticSilentRenew: process.env.REACT_APP_OIDC_AUTOMATIC_SILENT_RENEW, //(boolean, default: false): Flag to indicate if there should be an automatic attempt to renew the access token prior to its expiration.\r\n    loadUserInfo: process.env.REACT_APP_OIDC_LOAD_USER_INFO, //(boolean, default: true): Flag to control if additional identity data is loaded from the user info endpoint in order to populate the user's profile.\r\n    silent_redirect_uri: process.env.REACT_APP_OIDC_SILENT_REDIRECT_URL, //(string): The URL for the page containing the code handling the silent renew.\r\n    post_logout_redirect_uri: process.env.REACT_APP_OIDC_LOGOFF_REDIRECT_URL, // (string): The OIDC post-logout redirect URI.\r\n    //audience: process.env.REACT_APP_OIDC_AUDIENCE, //is there a way to specific the audience when making the jwt\r\n    response_type: process.env.REACT_APP_OIDC_RESPONSE_TYPE, //(string, default: 'id_token'): The type of response desired from the OIDC provider.\r\n    response_mode: process.env.REACT_APP_OIDC_RESPONSE_MODE,\r\n    //grantType: process.env.REACT_APP_OIDC_GRANT_TYPE,\r\n    scope: process.env.REACT_APP_OIDC_SCOPE, //(string, default: 'openid'): The scope being requested from the OIDC provider.\r\n    webAuthResponseType: process.env.REACT_APP_OIDC_WEB_AUTH_RESPONSE_TYPE,\r\n    publicUrl: process.env.REACT_APP_OIDC_PUBLIC_URL\r\n};\r\n\r\nexport const METADATA_OIDC = {\r\n    issuer: process.env.REACT_APP_OIDC_ISSUER,\r\n    jwks_uri: process.env.REACT_APP_OIDC_JWKS_URI,\r\n    authorization_endpoint: process.env.REACT_APP_OIDC_AUTHORIZATION_ENDPOINT,\r\n    token_endpoint: process.env.REACT_APP_OIDC_TOKEN_ENDPOINT,\r\n    userinfo_endpoint: process.env.REACT_APP_OIDC_USER_INFO_ENDPOINT,\r\n    end_session_endpoint: process.env.REACT_APP_OIDC_END_SESSION_ENDPOINT,\r\n    check_session_iframe: process.env.REACT_APP_OIDC_CHECK_SESSION_IFRAME,\r\n    revocation_endpoint: process.env.REACT_APP_OIDC_REVOCATION_ENDPOINT,\r\n    introspection_endpoint: process.env.REACT_APP_OIDC_INTROPSPECTION_ENDPOINT\r\n};","import React, { Component } from \"react\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport { AuthProvider, AuthRoute } from \"@spekta/react-oidc\";\r\nimport { Callback } from \"./components/callBack\";\r\nimport { Logout } from \"./components/logout\";\r\nimport { LogoutCallback } from \"./components/logoutCallback\";\r\nimport { Register } from \"./components/register\";\r\nimport { SilentRenew } from \"./components/silentRenew\";\r\nimport { PublicPage } from \"./components/publicPage\";\r\nimport { PrivatePage } from \"./components/privatePage\";\r\nimport { PrivateRoute } from \"./routes/privateRoute\";\r\nimport { IDENTITY_CONFIG, METADATA_OIDC } from \"./config/oidcConfig\";\r\n\r\nimport '@spekta/react-oidc/dist/index.css'\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  render() {\r\n      return (\r\n          <AuthProvider logger={console} identityConfig={IDENTITY_CONFIG} metaData={METADATA_OIDC} >\r\n              <BrowserRouter basename={\"/\"} >\r\n                <Switch>\r\n                  <Route exact={true} path=\"/signin-oidc\" component={Callback} />\r\n                  <Route exact={true} path=\"/logout\" component={Logout} />\r\n                  <Route exact={true} path=\"/logout/callback\" component={LogoutCallback} />\r\n                  <Route exact={true} path=\"/register\" component={Register} />\r\n                  <Route exact={true} path=\"/silentrenew\" component={SilentRenew} />\r\n                  <AuthRoute path=\"/dashboard\" component={PrivatePage} />\r\n                  <Route path=\"/\" component={PublicPage} />\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </AuthProvider>\r\n      );\r\n  }\r\n}\r\n\r\n\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}